{
    "commentTranslate.targetLanguage": "ru",
    "cSpell.ignoreWords": [
        "add",
        "alert",
        "app",
        "append",
        "arg",
        "arr",
        "array",
        "attribute",
        "backspace",
        "bg",
        "bin",
        "blur",
        "body",
        "callback",
        "ceil",
        "cell",
        "child",
        "class",
        "class sudoku constructor init string const start values split filter x includes map number this body let id counter for y push selected false supported important error started true s parse int get row n i return column segment dy dx keydown handler event cell if key item of continue delete backspace prevent default view update focus blur html size input element document create list add set attribute type text listener root div game style width px height font append remove value random math ceil empty easy mode new query selector app child normal hard function toggle bg keypress code export новая редакция учебника была недавно переведена с английского если что то не так пожалуйста поправьте в pr на git hub ссылка редактирование слева сайдбаре статьи спасибо ru учебник курсы форум es тесты знаний скринкасты купить epub pdf найти го сентября массив перебирающие методы материал этой странице устарел поэтому скрыт из оглавления сайта более информация по теме находится https learn javascript array methods современный стандарт java script предоставляет много методов для умного перебора массивов которые есть современных браузерах ну а их поддержки ie просто подключите библиотеку shim each метод arr callback arg используется массива он каждого элемента вызывает функцию функции передаёт три параметра очередной элемент его номер который перебирается например var яблоко апельсин груша alert второй необязательный аргумент позволяет указать контекст мы обсудим деталях чуть позже сейчас нам важен ничего возвращает используют только как элегантный вариант чем обычный цикл фильтрации через создаёт новый войдут те элементы которых вызов возвратит positive трансформации будет состоять результатов вызова names css name lengths length получили длинами every some эти используются проверки вернёт какого нибудь is все положительные хоть одно положительное reduce right initial последовательной обработки сохранением промежуточного результата это один самых сложных работы массивами но стоит освоить потому временами помощью можно несколько строк решить задачу которая иначе потребовала бы разы больше места и времени вычисления основе либо единого значения говорят свёртки далее разберём пример суммы применяет очереди к каждому элементу направо сохраняя при этом промежуточный результат аргументы previous current index последний же текущий перебираются текущего обрабатываемый кроме методу передать начальное значение первом вызове равно у нет второго аргумента оно первому перебор начинается со проще всего понять работу метода примере качестве хотим получить сумму всех элементов вот решение одну строку запустить передавать первым аргументом result sum нём происходит запуске исходное которого начинаются нулю сначала анонимная функция вызывается этим начальным значением элементом запоминается передаётся следующий уже вторым затем новое участвует вычислениях третьим поток вычислений получается такой виде таблицы где каждая строка очередном элементе первый третий четвёртый пятый видно предыдущего следующего кстати полный набор аргументов включает себя весь здесь них нужды посмотрим убрали конце точно отсутствии первого берётся стартует таблица такая за вычетом первой строки работает аналогично идёт массиву справа налево итого рассмотрели прохода вычислением во многих ситуациях использование написать код короче понятнее задачи перепишите важность ниже получает содержащий длины жизнь марсе выделенный участок уберите используйте вместо него частичных сумм входе чисел напишите sums говоря должен возвращать такого числа котором каждой позиции должна быть сумма до включительно ещё модифицировать входной решении открыть песочницу тестами проводим фреймворкам комментарииперед тем писать вам кажется статье комментария одной кода тег нескольких pre ссылку plnkr js bin codepen непонятно пишите именно илья кантор о проекте связаться нами пользовательское соглашение политика конфиденциальности slack чат",
        "code",
        "codepen",
        "column",
        "const",
        "constructor",
        "continue",
        "counter",
        "create",
        "css",
        "current",
        "default",
        "delete",
        "div",
        "document",
        "dx",
        "dy",
        "each",
        "easy",
        "element",
        "empty",
        "epub",
        "error",
        "es",
        "event",
        "every",
        "expord",
        "export",
        "false",
        "filter",
        "focus",
        "font",
        "for",
        "function",
        "game",
        "get",
        "git",
        "handler",
        "hard",
        "height",
        "html",
        "https",
        "hub",
        "i",
        "id",
        "ie",
        "if",
        "important",
        "includes",
        "index",
        "init",
        "initial",
        "input",
        "int",
        "is",
        "item",
        "java",
        "javascript",
        "js",
        "key",
        "keydown",
        "keypress",
        "learn",
        "length",
        "lengths",
        "let",
        "list",
        "listener",
        "map",
        "math",
        "methods",
        "mode",
        "n",
        "name",
        "names",
        "new",
        "normal",
        "number",
        "of",
        "parse",
        "pdf",
        "plnkr",
        "positive",
        "pr",
        "pre",
        "prevent",
        "previous",
        "push",
        "px",
        "query",
        "random",
        "reduce",
        "remove",
        "result",
        "return",
        "right",
        "root",
        "row",
        "ru",
        "s",
        "script",
        "segment",
        "selected",
        "selector",
        "set",
        "shim",
        "size",
        "slack",
        "some",
        "split",
        "start",
        "started",
        "string",
        "style",
        "sudoku",
        "sum",
        "sums",
        "supported",
        "text",
        "this",
        "toggle",
        "true",
        "type",
        "update",
        "value",
        "values",
        "var",
        "view",
        "width",
        "x",
        "y",
        "английского",
        "была",
        "знаний скринкасты",
        "недавно",
        "недавно переведена",
        "новая",
        "новая редакция учебника была недавно переведена с английского если что то не так пожалуйста поправьте в pr на git hub ссылка редактирование слева сайдбаре статьи спасибо",
        "новая редакция учебника была недавно переведена с английского если что то не так пожалуйста поправьте в pr на git hub ссылка редактирование слева сайдбаре статьи спасибо ru учебник курсы форум es тесты знаний скринкасты купить epub pdf найти го сентября массив перебирающие методы материал этой странице устарел поэтому скрыт из оглавления сайта более информация по теме находится https learn javascript array methods современный стандарт java script предоставляет много методов для умного перебора массивов которые есть современных браузерах ну а их поддержки ie просто подключите библиотеку shim for each метод arr callback this arg используется массива он каждого элемента вызывает функцию функции передаёт три параметра item i очередной элемент его номер который перебирается например var яблоко апельсин груша function alert второй необязательный аргумент позволяет указать контекст мы обсудим деталях чуть позже сейчас нам важен ничего возвращает используют только как элегантный вариант чем обычный цикл filter фильтрации через создаёт новый войдут те элементы которых вызов возвратит true positive number return map трансформации будет состоять результатов вызова names html css name lengths length получили длинами every some эти используются проверки вернёт какого нибудь is false все положительные хоть одно положительное reduce right initial value последовательной обработки сохранением промежуточного результата это один самых сложных работы массивами но стоит освоить потому временами помощью можно несколько строк решить задачу которая иначе потребовала бы разы больше места и времени вычисления основе либо единого значения говорят свёртки далее разберём пример суммы применяет очереди к каждому элементу направо сохраняя при этом промежуточный результат аргументы previous current index последний же текущий перебираются текущего обрабатываемый кроме методу передать начальное значение первом вызове равно у нет второго аргумента оно первому перебор начинается со проще всего понять работу метода примере качестве хотим получить сумму всех элементов вот решение одну строку запустить передавать первым аргументом result sum нём происходит запуске исходное которого начинаются нулю сначала анонимная функция вызывается этим начальным значением элементом запоминается передаётся следующий уже вторым затем новое участвует вычислениях третьим поток вычислений получается такой виде таблицы где каждая строка очередном элементе первый третий четвёртый пятый видно предыдущего следующего кстати полный набор аргументов включает себя весь здесь них нужды посмотрим убрали конце точно отсутствии первого берётся стартует таблица такая за вычетом первой строки работает аналогично идёт массиву справа налево итого рассмотрели прохода вычислением во многих ситуациях использование написать код короче понятнее задачи перепишите важность ниже получает содержащий длины жизнь марсе выделенный участок уберите используйте вместо него частичных сумм входе чисел напишите get sums говоря должен возвращать такого числа котором каждой позиции должна быть сумма до включительно ещё модифицировать входной решении открыть песочницу тестами проводим фреймворкам комментарииперед тем писать вам кажется статье комментария одной кода тег code нескольких pre ссылку plnkr js bin codepen непонятно пишите именно илья кантор о проекте связаться нами пользовательское соглашение политика конфиденциальности slack чат",
        "переведена",
        "пожалуйста",
        "поправьте",
        "редактирование",
        "редакция",
        "сайдбаре",
        "слева",
        "ссылка",
        "тесты",
        "учебника"
    ],
    "cSpell.words": [
        "знаний скринкасты",
        "статьи"
    ]
}